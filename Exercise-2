{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "station_names = ['lighthouse', 'Harmaja', 'Suomenlinna aaltopoiju', 'Kumpula', 'Kaisaniemi']\n",
    "station_start_years = ['2003', '1989', '2016', '2005', '1844']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "assert len(station_names) == 5\n",
    "assert len(station_start_years) == 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "assert station_names[0] == 'lighthouse'\n",
    "assert station_start_years[0] == '2003'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['lighthouse', 'Harmaja', 'Suomenlinna aaltopoiju', 'Kumpula', 'Kaisaniemi', 'Malmi airfield', 'Vuosaari airfield', 'Kaivopuisto']\n",
      "['2003', '1989', '2016', '2005', '1844', '1937', '2012', '1904']\n"
     ]
    }
   ],
   "source": [
    "station_names.append('Malmi airfield')\n",
    "station_names.append('Vuosaari airfield')\n",
    "station_names.append('Kaivopuisto')\n",
    "station_start_years.append('1937')\n",
    "station_start_years.append('2012')\n",
    "station_start_years.append('1904')\n",
    "print(station_names)\n",
    "print(station_start_years)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "assert len(station_names) == 8\n",
    "assert len(station_start_years) == 8"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "assert station_names[0] == 'lighthouse'\n",
    "assert station_start_years[0] == '2003'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n",
      "['-3.5', '-4.5', '-1.0', '4.0', '10.0', '15.0', '18.0', '16.0', '11.5', '6.0', '2.0', '-1.5']\n"
     ]
    }
   ],
   "source": [
    "months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n",
    "average_temp = ['-3.5', '-4.5', '-1.0', '4.0', '10.0', '15.0', '18.0', '16.0', '11.5', '6.0', '2.0', '-1.5']\n",
    "print(months)\n",
    "print(average_temp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "February = -4.5\n",
    "selected_month_index = months[2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "assert len(months) == 12\n",
    "assert len(average_temp) == 12"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "assert isinstance(months, list)\n",
    "assert isinstance(average_temp, list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "print_statement = \"The average temperature in Helsinki in\" + months[2] + \"is\" + average_temp[2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average temperature in Helsinki inMarchis-1.0\n"
     ]
    }
   ],
   "source": [
    "print(print_statement)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
